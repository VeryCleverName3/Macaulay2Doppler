needsPackage "NumericalAlgebraicGeometry"
needsPackage "Bertini"

FF = QQ;
R = FF[x,y,a,b];
dot = (v,w) -> (transpose v * w)_(0,0);
doppler = (ri,vi,fi,r,v,f) -> dot(ri-r,ri-r) * (f-fi)^2 - f^2*(dot(vi-v,ri-r))^2;

r = matrix{{x},{y}};
v = matrix{{a},{b}};

freal = 3;

dopplerEquations = {};

r1 = matrix{{0},{1}};
v1 = matrix{{0},{1}};
f1 = 2;
dopplerEquation = doppler(r1,v1,f1,r,v,freal);
dopplerEquations = append(dopplerEquations, dopplerEquation);

r1 = matrix{{1},{0}};
v1 = matrix{{1},{0}};
f1 = 2;
dopplerEquation = doppler(r1,v1,f1,r,v,freal);
dopplerEquations = append(dopplerEquations, dopplerEquation);

r1 = matrix{{-1},{0}};
v1 = matrix{{-1},{0}};
f1 = 2;
dopplerEquation = doppler(r1,v1,f1,r,v,freal);
dopplerEquations = append(dopplerEquations, dopplerEquation);

r1 = matrix{{0},{-1}};
v1 = matrix{{0},{1}};
f1 = 4;
dopplerEquation = doppler(r1,v1,f1,r,v,freal);
dopplerEquations = append(dopplerEquations, dopplerEquation);

sols = solveSystem dopplerEquations;
Jdet = det jacobian ideal dopplerEquations;

sols#24
subPoint(Jdet, {x,y,a,b}, sols#24)